/**
 * Generated by orval v6.31.0 üç∫
 * Do not edit manually.
 * Checklist service v1
 * Checklist service v1
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios'
import type {
  AxiosError,
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import useSwr from 'swr'
import type {
  Key,
  SWRConfiguration
} from 'swr'
import type {
  Get200
} from '../checklistServiceV1.schemas'


  
  /**
 * @summary Health check
 */
export const get = (
     options?: AxiosRequestConfig
 ): Promise<AxiosResponse<Get200>> => {
    return axios.get(
      `/`,options
    );
  }



export const getGetKey = () => [`/`] as const;


export type GetQueryResult = NonNullable<Awaited<ReturnType<typeof get>>>
export type GetQueryError = AxiosError<unknown>

/**
 * @summary Health check
 */
export const useGet = <TError = AxiosError<unknown>>(
   options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof get>>, TError> & { swrKey?: Key, enabled?: boolean }, axios?: AxiosRequestConfig }
) => {
  const {swr: swrOptions, axios: axiosOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
  const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetKey() : null);
  const swrFn = () => get(axiosOptions);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
