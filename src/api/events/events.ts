/**
 * Generated by orval v6.31.0 🍺
 * Do not edit manually.
 * Checklist service v1
 * Checklist service v1
 * OpenAPI spec version: 1.0.0
 */
import useSwr from 'swr'
import type {
  Key,
  SWRConfiguration
} from 'swr'
import type {
  EventEnvelope
} from '../checklistServiceV1.schemas'
import { customInstance } from '../../lib/axios';


  
  /**
 * @summary Server-Sent Events stream for real-time updates for checklist items, filtered by checklistId
 */
export const getEventsStreamForChecklistItems = (
    checklistId: number,
 ) => {
      return customInstance<EventEnvelope>(
      {url: `/v1/events/checklist-item-updates/${checklistId}`, method: 'GET'
    },
      );
    }
  


export const getGetEventsStreamForChecklistItemsKey = (checklistId: number,) => [`/v1/events/checklist-item-updates/${checklistId}`] as const;


export type GetEventsStreamForChecklistItemsQueryResult = NonNullable<Awaited<ReturnType<typeof getEventsStreamForChecklistItems>>>
export type GetEventsStreamForChecklistItemsQueryError = unknown

/**
 * @summary Server-Sent Events stream for real-time updates for checklist items, filtered by checklistId
 */
export const useGetEventsStreamForChecklistItems = <TError = unknown>(
  checklistId: number, options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof getEventsStreamForChecklistItems>>, TError> & { swrKey?: Key, enabled?: boolean },  }
) => {
  const {swr: swrOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false && !!(checklistId)
  const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetEventsStreamForChecklistItemsKey(checklistId) : null);
  const swrFn = () => getEventsStreamForChecklistItems(checklistId, );

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}
